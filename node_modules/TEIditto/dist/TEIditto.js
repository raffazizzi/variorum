// Generated by CoffeeScript 1.4.0
(function() {
  var TEIditto, root;

  TEIditto = {};

  (function($) {
    TEIditto.elTable = {};
    TEIditto.behaviors = {};
    TEIditto.loadTEI = function(url, cb) {
      return $.ajax({
        url: url,
        success: function(data) {
          var parsed;
          parsed = $.parseXML(data);
          if (cb != null) {
            cb(parsed);
          }
          return parsed;
        }
      });
    };
    TEIditto.fromODD = function() {};
    TEIditto.fromTEI = function(TEI, options, cb) {
      if (options == null) {
        options = {};
      }
      if (cb == null) {
        cb = null;
      }
      $(TEI).find(':root').find('*').andSelf().each(function(i, el) {
        return TEIditto.elTable[el.tagName] = "tei-" + el.tagName;
      });
      if (cb != null) {
        cb(TEIditto.elTable);
      }
      return TEIditto.elTable;
    };
    TEIditto.applyCustomElements = function(options, cb) {
      var bhv, el, registered_el, template;
      if (options == null) {
        options = {};
      }
      if (cb == null) {
        cb = null;
      }
      for (el in TEIditto.elTable) {
        template = null;
        bhv = TEIditto.behaviors[el];
        if (bhv != null) {
          if (bhv === "div") {
            template = {
              prototype: Object.create(HTMLDivElement.prototype)
            };
          } else if (bhv === "span") {
            template = {
              prototype: Object.create(HTMLSpanElement.prototype)
            };
          } else if (bhv === "a") {
            template = {
              prototype: Object.create(HTMLAnchorElement.prototype)
            };
          }
        }
        registered_el = document.registerElement(TEIditto.elTable[el], template);
      }
      if (cb != null) {
        return cb();
      }
    };
    TEIditto.getHTML5 = function(TEI_url, options, cb) {
      if (options == null) {
        options = {};
      }
      if (cb == null) {
        cb = null;
      }
      return TEIditto.loadTEI(TEI_url, function(TEI) {
        var newTree;
        newTree = null;
        TEIditto.fromTEI(TEI, options, function() {
          var convertEl;
          TEIditto.applyCustomElements(options);
          convertEl = function(el) {
            var contents, newElement;
            newElement = $("<" + TEIditto.elTable[el.tagName] + ">");
            $.each(el.attributes, function(index) {
              return $(newElement).attr(el.attributes[index].name, el.attributes[index].value);
            });
            contents = $(el).contents();
            if (contents.length > 0) {
              contents.each(function(i, node) {
                if (node.nodeType === 1) {
                  return newElement.append(convertEl(node));
                } else {
                  return newElement.append(node.cloneNode());
                }
              });
            }
            return newElement;
          };
          return newTree = convertEl($(TEI).children().get(0));
        });
        if (cb != null) {
          cb(newTree);
        }
        return newTree;
      });
    };
    return TEIditto.addBehaviors = function(bhvs) {
      var bhv, el, _results;
      _results = [];
      for (el in bhvs) {
        bhv = bhvs[el];
        if (bhv === "div" || bhv === "span" || bhv === "a") {
          _results.push(TEIditto.behaviors[el] = bhv);
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };
  })($);

  root = typeof exports !== "undefined" && exports !== null ? exports : window;

  root.TEIditto = TEIditto;

}).call(this);
